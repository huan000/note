<?php
//  php  提供两套正则表达式接口    pcre 的是 preg_         posix的是  ereg_

/**
 * php 函数
 */
// 1. 正则匹配函数  preg_match('preg','str'[,&匹配结果]);  s:1   f:0






/**
 *  元字符  (特殊意义的字符)
 *      2. [^]      表示单个字符除了原子表中的原子          ..[^0-9]除了数字
 *      3. {}       定义前面原子的数量                    ..[0-9]{3}前面有三个数字
 *         {m,}     至少m次
 *         {m,n}    前面的原子有m-n个
 *      4. *        前面原子的个数是0-任意个               等价于{0，}
 *      5. +        前面原子的个数是1-任意个               等价于{1，}
 *      6. ?        前面原子的个数是0-1                   等价于{0，1}
 *      7. ()       整体原子，代表一个整体  (模式单元)
 *         (red|blue)
 *         ()
 *         (?:)     拒绝字存储
 *         (?=str1|str2)        可以匹配str1和str2  但是最后的匹配不会显示出来
 *         (?!str1|str2)        不可以匹配str1和str2  最后的匹配不会显示出来
 *
 *         \\1      代表第一个字存储的内容
 *      8. ^        正则单元必须以后面的原子开头
 *      9. $        正则单元必须以后面的原子结尾
 *     10. .        表示除了换行符以外的任何一个字符
 *
 *    // 非打印字符
 *     1. \f        匹配一个换页符
 *     2. \n        匹配一个换行符
 *     3. \r        匹配一个回车符
 *     4. \t        匹配一个制表符
 *     5. \v        匹配一个垂直制表符
 *
 *    // 普通转义字符
 *     1. \d        匹配一个数字
 *     2. \D        匹配一个非数字
 *     3. \w        匹配一个数字字母或者下划线
 *     4. \W        匹配一个非数字字母或者下划线
 *     5. \s        匹配一个空白符 (包含所有的非打印字符)
 *     6. \S        匹配一个非空白符
 *     7. \b        匹配一个单词边界
 *     8. \B        匹配一个非单词边界
 *
 *    // 模式修正符
 *     i            忽略大小写
 *     s            忽略换行符号
 *     U            禁止贪婪匹配
 *
 *
 *
 *     ps: .*?      组合可以禁止贪婪匹配
 *
 *
 *
 *
 *
 */